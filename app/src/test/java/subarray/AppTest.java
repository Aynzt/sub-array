/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package subarray;

import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertTrue;

import org.junit.jupiter.api.Test;

class AppTest {

    @Test
    void hasSequence() {
        SequenceChecker sequenceChecker = new SequenceChecker();

        int[] array = { 5, 1, 22, 25, 6, -1, 8, 10 };

        int[] sequence = { 1, 6, -1, 10 };

        assertTrue(sequenceChecker.check(array, sequence));
    }

    @Test
    void hasntSequence() {
        SequenceChecker sequenceChecker = new SequenceChecker();

        assertFalse(sequenceChecker.check(new int[] { 5, 1, 22, 25, 6, -1, 8, 10 }, new int[] { 2, 4 }));
        assertFalse(sequenceChecker.check(new int[] { 5, 1, 22, 25, 6, -1, 8, 10 }, new int[] { 1, 4 }));
        assertFalse(sequenceChecker.check(new int[] { 5, 1, 22, 25, 6, -1, 8, 10 }, new int[] { 1, 4, -1, 9 }));
        assertFalse(sequenceChecker.check(new int[] { 5, 1, 22, 25, 6, -1, 8, 10 }, new int[] { 1, 6, -1, 9, 22 }));
    }

    @Test
    void hasSequenceForOneElement() {
        SequenceChecker sequenceChecker = new SequenceChecker();

        int[] array = { 5, 1, 22, 25, 6, -1, 8, 10 };

        int[] sequence = { 1 };

        assertTrue(sequenceChecker.check(array, sequence));
    }

    @Test
    void hasSequenceForBigData() {
        SequenceChecker sequenceChecker = new SequenceChecker();

        int[] array = sequenceChecker.populator(10).apply(10000);

        int[] sequence = sequenceChecker.populator(10).apply(500);

        assertTrue(sequenceChecker.check(array, sequence));
    }

}
